# Sistema de Gerenciamento Escolar

## Descrição

Este projeto é um sistema de gerenciamento escolar desenvolvido com MySQL. Ele permite a administração de informações relacionadas a alunos, cursos e notas. O sistema suporta operações básicas como inserção, atualização, exclusão e consultas de dados, facilitando o gerenciamento e a análise das informações escolares.

## Estrutura do Banco de Dados

O banco de dados possui três tabelas principais:

1. **Alunos**
   - `id_aluno` (INT, AUTO_INCREMENT, PRIMARY KEY): Identificador único do aluno.
   - `nome` (VARCHAR(100)): Nome completo do aluno.
   - `data_nascimento` (DATE): Data de nascimento do aluno.
   - `endereco` (VARCHAR(255)): Endereço residencial do aluno.

2. **Cursos**
   - `id_curso` (INT, AUTO_INCREMENT, PRIMARY KEY): Identificador único do curso.
   - `nome_curso` (VARCHAR(100)): Nome do curso.
   - `descricao` (TEXT): Descrição do curso.

3. **Notas**
   - `id_nota` (INT, AUTO_INCREMENT, PRIMARY KEY): Identificador único da nota.
   - `id_aluno` (INT, FOREIGN KEY): Referência ao aluno.
   - `id_curso` (INT, FOREIGN KEY): Referência ao curso.
   - `nota` (DECIMAL(5,2)): Nota obtida pelo aluno no curso.

## Funcionalidades

### Inserção de Dados

Você pode adicionar novos alunos, cursos e notas ao banco de dados com os seguintes comandos SQL:

-- Inserir alunos
INSERT INTO Alunos (nome, data_nascimento, endereco) VALUES
('Maria Silva', '2000-05-15', 'Rua das Flores, 123'),
('João Santos', '1999-11-22', 'Avenida Central, 456'),
('Ana Oliveira', '2001-07-30', 'Praça do Sol, 789');

-- Inserir cursos
INSERT INTO Cursos (nome_curso, descricao) VALUES
('Matemática', 'Curso de Matemática básica e avançada'),
('História', 'Curso de História geral e regional'),
('Biologia', 'Curso de Biologia com ênfase em Ecologia');

-- Inserir notas
INSERT INTO Notas (id_aluno, id_curso, nota) VALUES
(1, 1, 9.5),
(1, 2, 8.0),
(2, 1, 7.5),
(2, 3, 9.0),
(3, 2, 8.5);
Consultas
Aqui estão algumas consultas úteis que você pode executar:

Listar todos os alunos e suas notas por curso:
SELECT a.nome AS aluno, c.nome_curso AS curso, n.nota
FROM Notas n
JOIN Alunos a ON n.id_aluno = a.id_aluno
JOIN Cursos c ON n.id_curso = c.id_curso;
Calcular a média das notas por curso:
SELECT c.nome_curso AS curso, AVG(n.nota) AS media_nota
FROM Notas n
JOIN Cursos c ON n.id_curso = c.id_curso
GROUP BY c.nome_curso;
Encontrar o aluno com a maior nota em cada curso:
SELECT c.nome_curso AS curso, a.nome AS aluno, n.nota
FROM Notas n
JOIN Cursos c ON n.id_curso = c.id_curso
JOIN Alunos a ON n.id_aluno = a.id_aluno
WHERE n.nota = (
    SELECT MAX(nota)
    FROM Notas n2
    WHERE n2.id_curso = n.id_curso
);
Atualização de Dados
Para atualizar informações no banco de dados:

Atualizar a nota de um aluno em um curso específico:
UPDATE Notas
SET nota = 9.0
WHERE id_aluno = 1 AND id_curso = 2;
Modificar o endereço de um aluno:
UPDATE Alunos
SET endereco = 'Avenida das Acácias, 321'
WHERE id_aluno = 1;
Exclusão de Dados
Para remover dados do banco de dados:

Excluir um aluno e suas notas associadas:
DELETE FROM Alunos
WHERE id_aluno = 3;
Remover um curso e todas as notas associadas a esse curso:
DELETE FROM Cursos
WHERE id_curso = 2;
Requisitos
MySQL Server
Instalação
Clone o repositório:
git clone https://github.com/seu-usuario/seu-repositorio.git
Acesse o diretório do projeto:
cd seu-repositorio
Importe o banco de dados no MySQL:
mysql -u seu-usuario -p < script.sql
Substitua seu-usuario pelo seu nome de usuário MySQL e script.sql pelo nome do arquivo SQL que contém os comandos do banco de dados.
